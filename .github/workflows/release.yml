name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [darwin, windows, linux]
        goarch: [amd64, arm64]
        exclude:
          - goos: darwin
            goarch: arm64

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.17"

      - name: Build Project
        run: |
          export GOOS=${{ matrix.goos }}
          export GOARCH=${{ matrix.goarch }}
          go build -o build/my_app_${{ matrix.goos }}_${{ matrix.goarch }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: my_app_${{ matrix.goos }}_${{ matrix.goarch }}
          path: build/my_app_${{ matrix.goos }}_${{ matrix.goarch }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: build/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/my_app_darwin_amd64
          asset_name: my_app_darwin_amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/my_app_windows_amd64
          asset_name: my_app_windows_amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/my_app_linux_amd64
          asset_name: my_app_linux_amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/my_app_linux_arm64
          asset_name: my_app_linux_arm64
          asset_content_type: application/octet-stream
